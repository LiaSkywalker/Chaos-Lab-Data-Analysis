%% This code plotting the Voltage on the diode as a function of time
%put this script in the same direcory the data in.
%AC discrete measurements

%% clear workspace
clc
close all

%% import data of measurements
files=dir('*.csv');
OuterStruct = struct;

for k=1:length(files) %repeat for every file
    k %prints index of current iteration
    [T,V]=importfile(files(k).name);%import data to tuple vector
    currentVoltage =str2double(files(k).name(1:end-4));
    Y= V;%מדידה 
    
    Rmlist = isnan(T); %get rid of NaN in data!
    T(Rmlist) = [];
    Y(Rmlist) = [];
    
    Y=Y+abs(min(Y));
    Y=smooth(smooth(Y));
    localmax=findpeaks(Y,'MinPeakProminence',0.1);
    
    Vsource =[];
    for i=1:length(Y) %add file name to the Vsource vetor
        Vsource(end+1)=currentVoltage;
    end
    
    %update the outer struct with the new data
    currentStruct = struct('currentVoltage',currentVoltage,...
        'Times',T,'Vmeasure',localmax,'VOriginal',V, 'Vsmoove',... 
        Y,'Vsource', Vsource);
    OuterStruct(k).currentData = currentStruct;
    
end

%% print graphs

for k=1:length(files)
    
    f= figure();
    handles(k) = axes('Parent',f);
    set(gca,'fontsize',12)
    hold all
    plot(OuterStruct(k).currentData.Times,OuterStruct(k).currentData.Vsmoove,'markersize',12,'Parent',axes)
    title(['input Voltage ' num2str(OuterStruct(k).currentData.currentVoltage)])
    xlabel('Time [sec]')
    ylabel('Voltage measured [V]')
end

%% defult import data functions
function [time, VoltageDiode] = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [TIME, VOLTAGEDIODE] = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as column
%  vectors.
%
%  [TIME, VOLTAGEDIODE] = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  [time, VoltageDiode] = importfile("C:\Users\zrobb\Documents\לימודים\פיזיקה\מעבדה ב\כאוס\שבוע 2 מעגלי RLD על AC וAM\0.05.csv", [1, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 30-May-2021 19:58:01

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [1, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 11);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Var1", "Var2", "Var3", "time", "VoltageDiode", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11"];
opts.SelectedVariableNames = ["time", "VoltageDiode"];
opts.VariableTypes = ["string", "string", "string", "double", "double", "string", "string", "string", "string", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var6", "Var7", "Var8", "Var9", "Var10", "Var11"], "EmptyFieldRule", "auto");

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
time = tbl.time;
VoltageDiode = tbl.VoltageDiode;
end